// This file contains intentional XSS vulnerabilities for testing CodeQL
const express = require('express');
const app = express();

// FIXED: HTML escaping to prevent XSS
const escapeHtml = (str) => {
  return str.replace(/[&<>"']/g, (match) => {
    const escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    return escapeMap[match];
  });
};

app.get('/search', (req, res) => {
  const searchTerm = req.query.q || '';
  // Safe from XSS - HTML escaped
  const html = `
    <html>
      <body>
        <h1>Search Results</h1>
        <p>You searched for: ${escapeHtml(searchTerm)}</p>
      </body>
    </html>
  `;
  res.send(html);
});

// FIXED: Using textContent instead of innerHTML
app.get('/profile', (req, res) => {
  const userBio = req.query.bio || '';
  // Safe from XSS
  res.send(`
    <script>
      document.getElementById('bio').textContent = ${JSON.stringify(userBio)};
    </script>
  `);
});

// FIXED: Escaped error messages
app.get('/error', (req, res) => {
  const errorMsg = req.query.msg || 'Unknown error';
  // Safe from XSS
  res.status(400).send(`<h1>Error: ${escapeHtml(errorMsg)}</h1>`);
});

// FIXED: URL validation and encoding
app.get('/redirect', (req, res) => {
  const url = req.query.url || '/';
  // Validate URL to prevent XSS
  try {
    const validUrl = new URL(url, 'https://example.com');
    // Only allow same-origin redirects
    if (validUrl.origin !== 'https://example.com') {
      res.status(400).send('Invalid redirect URL');
      return;
    }
    res.send(`
      <script>
        window.location.href = ${JSON.stringify(validUrl.pathname)};
      </script>
    `);
  } catch (e) {
    res.status(400).send('Invalid URL');
  }
});