# Comprehensive Security Scanning Suite
#
# Purpose: Multi-layered security scanning to detect vulnerabilities
#          and exposed secrets.
#
# Triggers:
#   - Push to main/develop/staging branches
#   - PRs to main/develop/staging branches
#   - Daily scheduled scan at 2 AM UTC
#
# Scan Types:
#   1. Dependency vulnerabilities (Trivy)
#   2. Secret detection (TruffleHog)
#   3. Static Application Security Testing (Semgrep)
#   4. Container security (when applicable)
#
# Results:
#   - Uploaded to GitHub Security tab
#   - Available in SARIF format
#   - Fails build on critical issues

name: Security Scan

on:
  push:
    branches: [main, develop, staging]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - '**/*.txt'
  pull_request:
    branches: [main, develop, staging]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
      - '.github/*.md'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'README.md'
      - '**/*.txt'
  schedule:
    # Daily scan ensures we catch newly disclosed vulnerabilities
    - cron: '0 2 * * *'

permissions:
  contents: read          # Read repository content
  security-events: write  # Upload security findings

jobs:
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Scan for known vulnerabilities in dependencies
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: 'fs'                         # Filesystem scan
          scan-ref: '.'                           # Scan entire repository
          format: 'sarif'                         # GitHub-compatible format
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'        # Report these severity levels
          ignore-unfixed: true                    # Skip vulnerabilities without fixes

      # Make results visible in GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history needed for accurate secret detection

      # Scan for exposed secrets and credentials
      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@v3.63.7
        with:
          path: ./                                         # Scan entire repository
          base: ${{ github.event.repository.default_branch }}  # Compare against default branch
          head: HEAD                                       # Current commit
          extra_args: --only-verified                      # Only report verified secrets

  sast-scan:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      # Setup environment for accurate SAST analysis
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.11.0

      # Install dependencies for better type inference
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Run static analysis for security issues
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/javascript        # JavaScript-specific rules
            p/typescript        # TypeScript-specific rules
            p/react            # React security patterns
            p/nextjs           # Next.js-specific issues
            p/security-audit   # General security rules
            p/owasp-top-ten   # OWASP Top 10 vulnerabilities

      # Upload results even if scan finds issues
      - name: Upload Semgrep results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep.sarif

  docker-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    # Only run when Docker-related changes are made
    if: contains(github.event.head_commit.message, 'docker') || contains(github.event.pull_request.title, 'docker')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Build Docker image if Dockerfile exists
      - name: Build Docker image
        run: |
          if [ -f Dockerfile ]; then
            docker build -t zopio:scan .
          else
            echo "No Dockerfile found, skipping container scan"
            exit 0
          fi

      # Scan built container for vulnerabilities
      - name: Run Trivy container scan
        if: success()
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'zopio:scan'          # Local image to scan
          format: 'sarif'
          output: 'container-results.sarif'
          severity: 'CRITICAL,HIGH'         # Only critical and high severity

      # Upload container scan results
      - name: Upload container scan results
        if: success()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'container-results.sarif'